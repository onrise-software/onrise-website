---
import type { Form as Props } from '~/types';
import Button from '~/components/ui/Button.astro';
import Turnstile from './Turnstile.astro';

const { inputs, textarea, disclaimer, button = 'Contact us', description = '', turnstileSiteKey } = Astro.props;
---

<form id="contact-form" class="needs-validation" novalidate>
  {
    inputs &&
      inputs.map(
        ({ type = 'text', name, label = '', autocomplete = 'on', placeholder = '' }) =>
          name && (
            <div class="mb-6">
              {label && (
                <label for={name} class="block text-sm font-medium">
                  {label}
                </label>
              )}
              <input
                type={type}
                name={name}
                id={name}
                autocomplete={autocomplete}
                placeholder={placeholder}
                class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
                required
              />
            </div>
          )
      )
  }

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm font-medium">
          {textarea.label}
        </label>
        <textarea
          id="textarea"
          name={textarea.name ? textarea.name : 'message'}
          rows={textarea.rows ? textarea.rows : 4}
          placeholder={textarea.placeholder}
          class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
          required
        />
      </div>
    )
  }

  {
    disclaimer && (
      <div class="mt-3 flex items-start">
        <div class="flex mt-0.5">
          <input
            id="disclaimer"
            name="disclaimer"
            type="checkbox"
            class="cursor-pointer mt-1 py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
            required
          />
        </div>
        <div class="ml-3">
          <label for="disclaimer" class="cursor-pointer select-none text-sm text-gray-600 dark:text-gray-400">
            {disclaimer.label}
          </label>
        </div>
      </div>
    )
  }

  {turnstileSiteKey && (
    <div class="mt-6">
      <Turnstile siteKey={turnstileSiteKey} />
    </div>
  )}

  {
    button && (
      <div class="mt-10 grid">
        <Button variant="primary" type="submit">
          {button}
        </Button>
      </div>
    )
  }

  {
    description && (
      <div class="mt-3 text-center">
        <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
      </div>
    )
  }

  <div id="form-alert" class="mt-3 text-center hidden">
    <p class="text-sm"></p>
  </div>
</form>

<script>
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const alert = document.getElementById('form-alert');
  const alertText = alert?.querySelector('p');

  function showAlert(message: string, type: 'success' | 'error') {
    if (alert && alertText) {
      alertText.textContent = message;
      alert.classList.remove('hidden');
      alert.classList.remove('text-red-500', 'text-green-500');
      alert.classList.add(type === 'success' ? 'text-green-500' : 'text-red-500');
    }
  }

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(form);
    const turnstileResponse = formData.get('cf-turnstile-response');

    if (!turnstileResponse) {
      showAlert('Please complete the Turnstile challenge.', 'error');
      return;
    }

    try {
      // Replace with your actual form submission endpoint
      const response = await fetch('/api/contact', {
        method: 'POST',
        body: formData,
      });

      if (!response.ok) {
        throw new Error('Failed to submit form');
      }

      showAlert('Thank you for your message. We will get back to you soon!', 'success');
      form.reset();
      // Reset Turnstile
      // @ts-expect-error Turnstile types are not available
      turnstile.reset();
    } catch (error) {
      console.error('Error submitting form:', error);
      showAlert('Failed to submit form. Please try again later.', 'error');
    }
  });
</script>
